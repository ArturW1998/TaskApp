{"version":3,"sources":["registerServiceWorker.js","constants/constants.js","reducers/tasks.js","reducers/filters.js","store/index.js","reducers/index.js","components/todo-input/todo-input.jsx","components/todo-item/todo-item.jsx","components/todo-list/todo-list.jsx","components/footer/footer.jsx","containers/todo/todo.jsx","actions/actionCreator.js","components/title/title.jsx","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","FILTERS_BTN","text","id","TASKS","load","namespace","tasks","length","arguments","undefined","_ref","isCompleted","type","concat","Object","toConsumableArray","filter","task","map","BASE_FILTER","filters","preloadedState","activeFilter","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ToDoInput","value","onChange","onKeyPress","react_default","a","createElement","className","placeholder","defaultProps","ToDoItem","removeTask","completeTask","onClick","ToDoList","tasksList","_ref2","todo_item_todo_item","key","Footer","amount","changeFilter","ToDo","taskText","handleInputChange","target","_this","setState","addTask","props","Date","getTime","filterTasks","_ref3","_ref4","getActiveTasksCounter","_ref5","this","_this$props","isTasksExist","filteredTasks","taskCounter","todo_input_todo_input","todo_list_todo_list","footer_footer","Component","connect","_ref6","Title","title","App","es","react","components_title_title","todo_todo","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.41af2cab.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          /* eslint-disable no-console */\n          console.log(\n            'This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n          /* eslint-enable */\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              /* eslint-disable no-console */\n              console.log('New content is available; please refresh.');\n              /* eslint-enable */\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              /* eslint-disable no-console */\n              console.log('Content is cached for offline use.');\n              /* eslint-enable */\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      /* eslint-disable no-console */\n      console.error('Error during service worker registration:', error);\n      /* eslint-enable */\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      /* eslint-disable no-console */\n      console.log('No internet connection found. App is running in offline mode.');\n      /* eslint-enable */\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_TASK = 'ADD_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n\nexport const FILTERS_BTN = [\n  {\n    text: 'All',\n    id: 'all'\n  },\n  {\n    text: 'Active',\n    id: 'active'\n  },\n  {\n    text: 'Completed',\n    id: 'completed'\n  }\n];\n","import { load } from 'redux-localstorage-simple';\nimport { ADD_TASK, REMOVE_TASK, COMPLETE_TASK } from '../constants/constants';\n\nlet TASKS = load({ namespace: 'todo-list' });\n\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\n  TASKS = {\n    tasks: []\n  };\n}\n\nconst tasks = (state = TASKS.tasks, { id, text, isCompleted, type }) => {\n  switch (type) {\n    case ADD_TASK:\n      return [\n        ...state,\n        {\n          id,\n          text,\n          isCompleted\n        }\n      ];\n    case REMOVE_TASK:\n      return [...state].filter(task => task.id !== id);\n    case COMPLETE_TASK:\n      return [...state].map(task => {\n        if (task.id === id) {\n          task.isCompleted = !task.isCompleted;\n        }\n        return task;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n","import { load } from 'redux-localstorage-simple';\nimport { CHANGE_FILTER } from '../constants/constants';\n\nlet BASE_FILTER = load({ namespace: 'todo-list' });\n\nif (!BASE_FILTER || !BASE_FILTER.filters || !BASE_FILTER.filters.length) {\n  BASE_FILTER = {\n    filters: 'all'\n  };\n}\n\nconst filter = (state = BASE_FILTER.filters, { type, activeFilter }) => {\n  switch (type) {\n    case CHANGE_FILTER:\n      return activeFilter;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { save } from 'redux-localstorage-simple';\nimport rootReducer from '../reducers';\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst configureStore = preloadedState =>\n  createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(save({ namespace: 'todo-list' })))\n  );\n\nconst store = configureStore({});\n\nexport default store;\n","import { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport filters from './filters';\n\nconst rootReducer = combineReducers({ tasks, filters });\n\nexport default rootReducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-input.css';\n\nconst ToDoInput = ({ value, onChange, onKeyPress }) => (\n  <div className=\"todo-input-wrapper\">\n    <i className=\"fas fa-plus\" />\n    <input\n      className=\"todo-input\"\n      placeholder=\"Click to add task\"\n      onChange={onChange}\n      value={value}\n      onKeyPress={onKeyPress}\n    />\n  </div>\n);\n\nToDoInput.propTypes = {\n  onChange: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  value: PropTypes.string\n};\n\nToDoInput.defaultProps = {\n  onChange: () => {},\n  onKeyPress: () => {},\n  value: ''\n};\n\nexport default ToDoInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-item.css';\n\nconst ToDoItem = ({ text, isCompleted, removeTask, id, completeTask }) => (\n  <li className=\"todo-item\">\n    <i\n      onClick={() => completeTask(id)}\n      className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'}\n    />\n    <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\n    <i onClick={() => removeTask(id)} className=\"fas fa-times\" />\n  </li>\n);\n\nToDoItem.propTypes = {\n  text: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  removeTask: PropTypes.func,\n  id: PropTypes.number,\n  completeTask: PropTypes.func\n};\n\nToDoItem.defaultProps = {\n  text: '',\n  isCompleted: false,\n  removeTask: () => {},\n  id: 0,\n  completeTask: () => {}\n};\n\nexport default ToDoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ToDoItem from '../todo-item/todo-item';\nimport './todo-list.css';\n\nconst ToDoList = ({ tasksList, removeTask, completeTask }) => (\n  <ul className=\"todo-list\">\n    {tasksList.map(({ id, text, isCompleted }) => (\n      <ToDoItem\n        completeTask={completeTask}\n        removeTask={removeTask}\n        id={id}\n        key={id}\n        text={text}\n        isCompleted={isCompleted}\n      />\n    ))}\n  </ul>\n);\n\nToDoList.propTypes = {\n  tasksList: PropTypes.array,\n  removeTask: PropTypes.func,\n  completeTask: PropTypes.func\n};\n\nToDoList.defaultProps = {\n  tasksList: [],\n  removeTask: () => {},\n  completeTask: () => {}\n};\n\nexport default ToDoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTERS_BTN } from '../../constants/constants';\nimport './footer.css';\n\nconst Footer = ({ amount, activeFilter, changeFilter }) => (\n  <div className=\"footer\">\n    <span className=\"amount\">{`${amount} Tasks left`}</span>\n    <div className=\"btn-group\">\n      {FILTERS_BTN.map(({ text, id }) => (\n        <button\n          onClick={() => {\n            changeFilter(id);\n          }}\n          key={id}\n          className={id === activeFilter ? 'filter-btn active' : 'filter-btn'}\n        >\n          {text}\n        </button>\n      ))}\n    </div>\n  </div>\n);\n\nFooter.propTypes = {\n  amount: PropTypes.number,\n  activeFilter: PropTypes.string,\n  changeFilter: PropTypes.func\n};\n\nFooter.defaultProps = {\n  changeFilter: () => {},\n  amount: 0,\n  activeFilter: 'all'\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addTask, removeTask, completeTask, changeFilter } from '../../actions/actionCreator';\nimport ToDoInput from '../../components/todo-input/todo-input';\nimport ToDoList from '../../components/todo-list/todo-list';\nimport Footer from '../../components/footer/footer';\nimport './todo.css';\n\nclass ToDo extends Component {\n  static propTypes = {\n    changeFilter: PropTypes.func,\n    tasks: PropTypes.array,\n    removeTask: PropTypes.func,\n    filters: PropTypes.string,\n    completeTask: PropTypes.func,\n    addTask: PropTypes.func\n  };\n\n  static defaultProps = {\n    changeFilter: () => {},\n    tasks: [],\n    removeTask: () => {},\n    filters: 'all',\n    completeTask: () => {},\n    addTask: () => {}\n  };\n\n  state = {\n    taskText: ''\n  };\n\n  handleInputChange = ({ target: { value } }) => {\n    this.setState({\n      taskText: value\n    });\n  };\n\n  addTask = ({ key }) => {\n    const { taskText } = this.state;\n\n    if (taskText.length > 3 && key === 'Enter') {\n      const { addTask } = this.props;\n      addTask(new Date().getTime(), taskText, false);\n      this.setState({\n        taskText: ''\n      });\n    }\n  };\n\n  filterTasks = (tasks, activeFilter) => {\n    switch (activeFilter) {\n      case 'completed':\n        return tasks.filter(({ isCompleted }) => isCompleted);\n      case 'active':\n        return tasks.filter(({ isCompleted }) => !isCompleted);\n      default:\n        return tasks;\n    }\n  };\n\n  getActiveTasksCounter = tasks => tasks.filter(({ isCompleted }) => !isCompleted).length;\n\n  render() {\n    const { taskText } = this.state;\n    const { tasks, removeTask, completeTask, filters, changeFilter } = this.props;\n    const isTasksExist = tasks && tasks.length > 0;\n    const filteredTasks = this.filterTasks(tasks, filters);\n    const taskCounter = this.getActiveTasksCounter(tasks);\n\n    return (\n      <div className=\"todo-wrapper\">\n        <ToDoInput onKeyPress={this.addTask} onChange={this.handleInputChange} value={taskText} />\n        {isTasksExist && (\n          <ToDoList completeTask={completeTask} tasksList={filteredTasks} removeTask={removeTask} />\n        )}\n        {isTasksExist && (\n          <Footer changeFilter={changeFilter} amount={taskCounter} activeFilter={filters} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  ({ tasks, filters }) => ({\n    tasks,\n    filters\n  }),\n  { addTask, removeTask, completeTask, changeFilter }\n)(ToDo);\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER } from '../constants/constants';\n\nexport const addTask = (id, text, isCompleted) => ({\n  type: ADD_TASK,\n  id,\n  text,\n  isCompleted\n});\n\nexport const removeTask = id => ({\n  type: REMOVE_TASK,\n  id\n});\n\nexport const completeTask = id => ({\n  type: COMPLETE_TASK,\n  id\n});\n\nexport const changeFilter = activeFilter => ({\n  type: CHANGE_FILTER,\n  activeFilter\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './title.css';\n\nconst Title = ({ title }) => <h1 className=\"title\">{title}</h1>;\n\nTitle.propTypes = {\n  title: PropTypes.string\n};\n\nTitle.defaultProps = {\n  title: 'Simple title'\n};\n\nexport default Title;\n","import React, { Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport ToDo from './containers/todo/todo';\nimport Title from './components/title/title';\n\nconst App = () => (\n  <Provider store={store}>\n    <Fragment>\n      <Title title=\"Task App\" />\n      <ToDo />\n    </Fragment>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}