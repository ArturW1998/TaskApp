{"version":3,"sources":["registerServiceWorker.js","reducers/tasks.js","constants.js","reducers/filters.js","store.js","reducers/index.js","components/todo-input/todo-input.jsx","components/todo-item/todo-item.jsx","components/todo-list/todo-list.jsx","components/footer/footer.jsx","containers/todo/todo.jsx","actions/actionCreator.js","components/title/title.jsx","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","TASKS","load","namespace","tasks","length","arguments","undefined","_ref","id","text","isCompleted","type","concat","Object","toConsumableArray","filter","task","map","BASE_FILTER","filters","preloadedState","activeFilter","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ToDoInput","value","onChange","onKeyPress","react_default","a","createElement","className","placeholder","defaultProps","ToDoItem","removeTask","completeTask","onClick","ToDoList","tasksList","_ref2","todo_item_todo_item","key","FILTERS_BTN","Footer","amount","changeFilter","ToDo","taskText","handleInputChange","target","_this","setState","addTast","props","Date","getTime","filterTasks","_ref3","_ref4","getActiveTasksCounter","_ref5","this","_this$props","isTasksExist","filteredTasks","taskCounter","todo_input_todo_input","todo_list_todo_list","footer_footer","Component","connect","_ref6","Title","title","App","es","react","components_title_title","todo_todo","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b3b37d1f.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          /* eslint-disable no-console */\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ');\n          /* eslint-enable */\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              /* eslint-disable no-console */\n              console.log('New content is available; please refresh.');\n              /* eslint-enable */\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              /* eslint-disable no-console */\n              console.log('Content is cached for offline use.');\n              /* eslint-enable */\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      /* eslint-disable no-console */\n      console.error('Error during service worker registration:', error);\n      /* eslint-enable */\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      /* eslint-disable no-console */\n      console.log('No internet connection found. App is running in offline mode.');\n      /* eslint-enable */\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { load } from 'redux-localstorage-simple';\n\nimport { ADD_TASK, REMOVE_TASK, COMPLETE_TASK } from '../constants';\n\nlet TASKS = load({ namespace: 'todo-list' });\n\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\n  TASKS = {\n    tasks: []\n  };\n}\n\nconst tasks = (state = TASKS.tasks, { id, text, isCompleted, type }) => {\n  switch (type) {\n    case ADD_TASK:\n      return [\n        ...state,\n        {\n          id,\n          text,\n          isCompleted\n        }\n      ];\n    case REMOVE_TASK:\n      return [...state].filter(task => task.id !== id);\n    case COMPLETE_TASK:\n      return [...state].map(task => {\n        if (task.id === id) {\n          task.isCompleted = !task.isCompleted;\n        }\n        return task;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n","export const ADD_TASK = 'ADD_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n","import { load } from 'redux-localstorage-simple';\n\nimport { CHANGE_FILTER } from '../constants';\n\nlet BASE_FILTER = load({ namespace: 'todo-list' });\n\nif (!BASE_FILTER || !BASE_FILTER.filters || !BASE_FILTER.filters.length) {\n  BASE_FILTER = {\n    filters: 'all'\n  };\n}\n\nconst filter = (state = BASE_FILTER.filters, { type, activeFilter }) => {\n  switch (type) {\n    case CHANGE_FILTER:\n      return activeFilter;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { save } from 'redux-localstorage-simple';\n\nimport rootReducer from './reducers/index';\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n/* eslint-enable */\n\nconst configureStore = preloadedState => createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware(save({ namespace: 'todo-list' }))));\n\nconst store = configureStore({});\n\nexport default store;\n","import { combineReducers } from 'redux';\n\nimport tasks from './tasks';\nimport filters from './filters';\n\nconst rootReducer = combineReducers({ tasks, filters });\n\nexport default rootReducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './todo-input.css';\n\nconst ToDoInput = ({ value, onChange, onKeyPress }) => (\n  <div className=\"todo-input-wrapper\">\n    <i className=\"fas fa-plus\" />\n    <input className=\"todo-input\" placeholder=\"Click to add task\" onChange={onChange} value={value} onKeyPress={onKeyPress} />\n  </div>\n);\n\nToDoInput.propTypes = {\n  onChange: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  value: PropTypes.string\n};\n\nToDoInput.defaultProps = {\n  onChange: () => {},\n  onKeyPress: () => {},\n  value: ''\n};\n\nexport default ToDoInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './todo-item.css';\n\nconst ToDoItem = ({ text, isCompleted, removeTask, id, completeTask }) => (\n  <li className=\"todo-item\">\n    <i onClick={() => completeTask(id)} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\n    <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\n    <i onClick={() => removeTask(id)} className=\"fas fa-times\" />\n  </li>\n);\n\nToDoItem.propTypes = {\n  text: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  removeTask: PropTypes.func,\n  id: PropTypes.number,\n  completeTask: PropTypes.func\n};\n\nToDoItem.defaultProps = {\n  text: '',\n  isCompleted: false,\n  removeTask: () => {},\n  id: 0,\n  completeTask: () => {}\n};\n\nexport default ToDoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ToDoItem from '../todo-item/todo-item';\n\nimport './todo-list.css';\n\nconst ToDoList = ({ tasksList, removeTask, completeTask }) => (\n  <ul className=\"todo-list\">\n    {tasksList.map(({ id, text, isCompleted }) => (\n      <ToDoItem completeTask={completeTask} removeTask={removeTask} id={id} key={id} text={text} isCompleted={isCompleted} />\n    ))}\n  </ul>\n);\n\nToDoList.propTypes = {\n  tasksList: PropTypes.array,\n  removeTask: PropTypes.func,\n  completeTask: PropTypes.func\n};\n\nToDoList.defaultProps = {\n  tasksList: [],\n  removeTask: () => {},\n  completeTask: () => {}\n};\n\nexport default ToDoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './footer.css';\n\nconst FILTERS_BTN = [\n  {\n    text: 'All',\n    id: 'all'\n  },\n  {\n    text: 'Active',\n    id: 'active'\n  },\n  {\n    text: 'Completed',\n    id: 'completed'\n  }\n];\n\nconst Footer = ({ amount, activeFilter, changeFilter }) => (\n  <div className=\"footer\">\n    <span className=\"amount\">{`${amount} Tasks left`}</span>\n    <div className=\"btn-group\">\n      {FILTERS_BTN.map(({ text, id }) => (\n        <button\n          onClick={() => {\n            changeFilter(id);\n          }}\n          key={id}\n          className={id === activeFilter ? 'filter-btn active' : 'filter-btn'}\n        >\n          {text}\n        </button>\n      ))}\n    </div>\n  </div>\n);\n\nFooter.propTypes = {\n  amount: PropTypes.number,\n  activeFilter: PropTypes.string,\n  changeFilter: PropTypes.func\n};\n\nFooter.defaultProps = {\n  changeFilter: () => {},\n  amount: 0,\n  activeFilter: 'all'\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addTast, removeTask, completeTask, changeFilter } from '../../actions/actionCreator';\n\nimport ToDoInput from '../../components/todo-input/todo-input';\nimport ToDoList from '../../components/todo-list/todo-list';\nimport Footer from '../../components/footer/footer';\n\nimport './todo.css';\n\nclass ToDo extends Component {\n  state = {\n    taskText: ''\n  };\n\n  handleInputChange = ({ target: { value } }) => {\n    this.setState({\n      taskText: value\n    });\n  };\n\n  addTast = ({ key }) => {\n    const { taskText } = this.state;\n\n    if (taskText.length > 3 && key === 'Enter') {\n      const { addTast } = this.props;\n      addTast(new Date().getTime(), taskText, false);\n      this.setState({\n        taskText: ''\n      });\n    }\n  };\n\n  filterTasks = (tasks, activeFilter) => {\n    switch (activeFilter) {\n      case 'completed':\n        return tasks.filter(({ isCompleted }) => isCompleted);\n      case 'active':\n        return tasks.filter(({ isCompleted }) => !isCompleted);\n      default:\n        return tasks;\n    }\n  };\n\n  getActiveTasksCounter = tasks => tasks.filter(({ isCompleted }) => !isCompleted).length;\n\n  render() {\n    const { taskText } = this.state;\n    const { tasks, removeTask, completeTask, filters, changeFilter } = this.props;\n    const isTasksExist = tasks && tasks.length > 0;\n    const filteredTasks = this.filterTasks(tasks, filters);\n    const taskCounter = this.getActiveTasksCounter(tasks);\n\n    return (\n      <div className=\"todo-wrapper\">\n        <ToDoInput onKeyPress={this.addTast} onChange={this.handleInputChange} value={taskText} />\n        {isTasksExist && <ToDoList completeTask={completeTask} tasksList={filteredTasks} removeTask={removeTask} />}\n        {isTasksExist && <Footer changeFilter={changeFilter} amount={taskCounter} activeFilter={filters} />}\n      </div>\n    );\n  }\n}\n\nToDo.propTypes = {\n  changeFilter: PropTypes.func,\n  tasks: PropTypes.array,\n  removeTask: PropTypes.func,\n  filters: PropTypes.string,\n  completeTask: PropTypes.func,\n  addTast: PropTypes.func\n};\n\nToDo.defaultProps = {\n  changeFilter: () => {},\n  tasks: [],\n  removeTask: () => {},\n  filters: 'all',\n  completeTask: () => {},\n  addTast: () => {}\n};\n\nexport default connect(\n  ({ tasks, filters }) => ({\n    tasks,\n    filters\n  }),\n  { addTast, removeTask, completeTask, changeFilter }\n)(ToDo);\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER } from '../constants';\n\nexport const addTast = (id, text, isCompleted) => ({\n  type: ADD_TASK,\n  id,\n  text,\n  isCompleted\n});\n\nexport const removeTask = id => ({\n  type: REMOVE_TASK,\n  id\n});\n\nexport const completeTask = id => ({\n  type: COMPLETE_TASK,\n  id\n});\n\nexport const changeFilter = activeFilter => ({\n  type: CHANGE_FILTER,\n  activeFilter\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './title.css';\n\nconst Title = ({ title }) => <h1 className=\"title\">{title}</h1>;\n\nTitle.propTypes = {\n  title: PropTypes.string\n};\n\nTitle.defaultProps = {\n  title: 'Simple title'\n};\n\nexport default Title;\n","import React, { Fragment } from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport ToDo from './containers/todo/todo';\nimport Title from './components/title/title';\n\nconst App = () => (\n  <Provider store={store}>\n    <Fragment>\n      <Title title=\"Task List\" />\n      <ToDo />\n    </Fragment>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}